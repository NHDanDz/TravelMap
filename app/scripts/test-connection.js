const { Pool } = require('pg');
require('dotenv').config({ path: '.env.local' });

const testConnection = async () => {
  // Hi·ªÉn th·ªã URL k·∫øt n·ªëi (che gi·∫•u m·∫≠t kh·∫©u)
  const connectionString = process.env.POSTGRES_URL || '';
  const maskedUrl = connectionString.replace(/:[^:]*@/, ':***@');
  console.log('ƒêang k·∫øt n·ªëi ƒë·∫øn:', maskedUrl);

  // T·∫°o pool k·∫øt n·ªëi
  const pool = new Pool({
    connectionString: process.env.POSTGRES_URL,
  });

  try {
    // Th·ª≠ k·∫øt n·ªëi v√† truy v·∫•n ƒë∆°n gi·∫£n
    const client = await pool.connect();
    console.log('‚úÖ K·∫øt n·ªëi PostgreSQL th√†nh c√¥ng!');
    
    // Ki·ªÉm tra c√°c b·∫£ng ƒë√£ ƒë∆∞·ª£c t·∫°o
    const res = await client.query(`
      SELECT table_name 
      FROM information_schema.tables 
      WHERE table_schema = 'public'
    `);
    
    console.log('\nüìã C√°c b·∫£ng trong database:');
    res.rows.forEach(row => {
      console.log(`- ${row.table_name}`);
    });

    // ƒê·∫øm s·ªë l∆∞·ª£ng b·∫£n ghi trong m·ªói b·∫£ng
    console.log('\nüìä S·ªë l∆∞·ª£ng d·ªØ li·ªáu trong c√°c b·∫£ng:');
    for (const table of res.rows) {
      const countRes = await client.query(`SELECT COUNT(*) FROM ${table.table_name}`);
      console.log(`- ${table.table_name}: ${countRes.rows[0].count} b·∫£n ghi`);
    }

    client.release();
  } catch (err) {
    console.error('‚ùå L·ªói k·∫øt n·ªëi PostgreSQL:', err);
  } finally {
    await pool.end();
  }
};

testConnection();